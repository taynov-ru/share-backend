name: Publish on Docker Hub and Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Choose environment to deploy'
        required: true
        default: 'test'
        type: choice
        options:
          - test
          - production
  push:
    branches:
      - 'main'

jobs:
  build_jar:
    runs-on: arc-runner-set
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'adopt'
      - name: Build with Gradle
        uses: gradle/gradle-build-action@749f47bda3e44aa060e82d7b3ef7e40d953bd629
        with:
          arguments: build
      - uses: actions/upload-artifact@v4
        with:
          name: Package
          path: build/libs

  build-docker:
#    runs-on: arc-runner-set # uses self-hosted runner scale set
    runs-on: ubuntu-latest
    needs:
      - build_jar
    env:
      GH_REGISTRY: "https://index.docker.io/v1"
      KANIKO_CACHE_ARGS: "--cache=true --cache-copy-layers=true --cache-ttl=24h"
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v4
        with:
          name: Package
          path: .

      - name: Kaniko build
        uses: aevea/action-kaniko@master
        with:
          image: ctrlww/share-backend
          tag: $(echo ${GITHUB_SHA} | head -c 7)
          username: ${{ secrets.DOCKER_LOGIN }}
          password: ${{ secrets.DOCKER_PASS }}
          
  deploy-test:
    if: ${{ github.event_name == 'push' || github.event.inputs.environment == 'test' }}
    runs-on: arc-runner-set
    environment: Test
    needs:
      - build-docker
    container:
      image: alpine/k8s:1.31.0
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare image name
        run: |
          echo "image=ctrlww/share-backend:$(echo ${GITHUB_SHA} | head -c 7)" >> $GITHUB_ENV

      - name: Prepare env
        run: |

          cd deployment/environments/test
          kustomize edit set image share-backend-image="${{ env.image }}"
          kustomize build .
          cd -
      - name: Diff
        continue-on-error: true
        run: |
          kubectl diff -k deployment/environments/test
          kubectl rollout status deployment -n share-test --timeout=600s

      - name: Deploy
        run: |
          kubectl apply -k deployment/environments/test
          kubectl rollout status deployment -n share-test --timeout=600s
